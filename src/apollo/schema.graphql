"""
/*
* Copyright 2021 OpenBA-NextGenTV Contributors (https://OpenBA-NextGenTV.tech)
* Copyright 2021 Sinclair Broadcast Group, Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
"""

type Query {
    fips: String!
    priority: Priority!
    flashChannel: FlashChannel!
    hiddenFlashChannel: String!
    alerts: [Alert!]!
    hiddenAlert: Int!
    menu: Menu!
    menuIsVisible: Boolean!
    widget: Widget
    deviceInfo: DeviceInfo!
    appConfig: AppConfig!
}

type Mutation {
    hideAlert(alert: HideAlertInput!): Alert
    hideFlashChannel(flashChannel: HideFlashChannelInput!): FlashChannel
    updatePriority(priority: Priority!): Priority
    updateFips(fips: String): String
    setWidget(widget: WidgetInput): Widget
    setMenuIsVisible(menuIsVisible: Boolean): Boolean
    selectMenu(menuId: ID!): Menu
    unselectMenu(menuId: ID!): Menu
    unselectMenuItems: Menu
    selectMenuPrevious: Menu
    selectMenuNext: Menu
    selectMenuParent: Menu
    selectMenuChild: Menu
}

type Alert {
    id: ID!
    alertBarTitle: String!
    menuTitle: String!
    expire: Int!
    latestPublishTime: Int!
    priority: Priority!
    targets: [String!]!
    pages: [Page!]!
    eventCode: String!
}

type FlashChannel {
    id: ID!
    channelId: String!
    isLive: Boolean!
    title: String!
    videoUrl: String!
    thumbnail: String!
    expireTime: Int!
}

input HideAlertInput {
    latestPublishTime: Int!
}

input HideFlashChannelInput {
    channelId: String!
}

type Page {
    id: ID!
    title: String!
    story: String!
    imageUrl: String
}

type Menu {
    id: ID!
    titleImage: String
    title: String!
    titleHidden: Boolean
    subTitle: String
    showTime: Boolean
    headerImage: String
    footerImage: String
    thumbnail: String
    widget: Widget
    items: [Menu!]
    selected: Boolean
    noItemsText: String
    hidden: Boolean
}

type Widget {
    id: ID!
    type: String!
    payload: String
    metric: Metric
}

input WidgetInput {
    type: String!
    payload: String
}

type Metric {
    page: String!
    title: String
}

enum Priority {
    DIAGNOSTIC,
    NO_ALERTS,
    LOW,
    MEDIUM,
    HIGH,
    EMERGENCY,
}

enum DeviceMake {
    LG,
    DEFAULT
}

type DeviceInfo {
    id: ID!
    serviceId: String!
    station: String!
    isInternetConnected: Boolean!
    deviceId: String!
    buildVersion: String!
    appVersion: String!
    deviceMake: DeviceMake!
}

type AppConfig {
    id: ID!
    googleAnalyticAccount: String
    endpoints: Endpoints!
    featureFlags: FeatureFlags!
    theme: Theme!
    privacyPolicy: String!
}

type Endpoints {
    id: ID!
    latestweathercastUrl: String
    sevenDayForecastUrl: String
    feedProviderUrl: String
    flashChannelUrl: String
}

type FeatureFlags {
    id: ID!
    menuItemsDisabled: [String!]!
    flashChannelEnabled: Boolean
    preferAEATMessages: Boolean
    disableAlerts: Boolean
}

type Theme {
    id: ID!
    menu: MenuTheme!
    cta: CTATheme!
}

type CTATheme {
    id: ID!
    activeButtonColor: String!
    passiveButtonColor: String!
    borderColor: String!
    backgroundColor: String!
    textColor: String!
}

type MenuTheme {
    id: ID!
    backgroundColor: String!
    borderColor: String!
    selectedItemColor: String!
}
